{
  "hash": "d2e88832ece9855a93551195cb4506c1",
  "result": {
    "markdown": "---\ntitle: \"Responsibility, Reflection, and Biases in Secure Coding\"\nsubtitle: \"Social and Cognitive Aspects of Software Development\"\nauthor: \"Matthew Ivory\"\n\nbibliography: [ExperimentOne_TA_Bib.bib, ExperimentOne_Bib.json]\ncsl: acm-sig-proceedings.csl\n\nformat: \n  revealjs:\n    theme: [default, custom.scss]\n    logo: https://www.lancaster.ac.uk/media/lancaster-university/content-assets/images/fst/logos/LUPsychology.svg\n    slide-number: true\n    incremental: false\n    smaller: true\n    auto-stretch: false\n\nhide-cursor-time: 25\n\n---\n\n::: {.cell}\n\n:::\n\n\n\n## Introduction #1\n\n- Software development is more than just the technical implementation, it is a blend of social, cognitive, and technical mechanisms\n\n- Psychology can offer insights into the individual differences and human behaviours within secure coding\n\n- Despite best efforts by the software engineering community, developers still write insecure code!\n\n- By applying psychological perspectives to secure coding, we can better address security challenges\n\n## Introduction #2\n\n- We collected data from a sample of software engineers and examined their perceptions of risk when considering software security\n\n- They told us about their behaviours and perspective on security within their work, as well as completed a battery of cognitive tests\n\n- We applied a mixed-analysis: a thematic analysis, and a quantitative modelling process\n\n- Two papers, one submitted to ACM Transactions on Computer-Human Interaction and the other to APA Technology, Mind & Behaviour \n\n## Methods\n\n::::{.columns}\n\n:::{.column width=\"40%\"}\n\n- 145 participants\n  - 73 professional freelancers\n  - 72 CS students\n\n![](Images/map.jpeg)\n\n:::\n\n:::{.column width=\"60%\"}\n\nParticipants completed four main parts:\n\n- OWASP vulnerability task\n- Cognitive reflection test\n- Gambling task\n- Four qualitative rich-text questions\n\n:::\n\n::::\n\n## OWASP Vulnerability Task (OVT) \n\n- A measure of optimism bias\n\n- Individuals often underestimate the likelihood of negative events affecting them [@sharotOptimismBias2011; @weinsteinUnrealisticOptimismFuture1980]\n\n- Uses OWASP 2021 top 5: Injection flaws, Broken Authentication, Sensitive Data Exposure, XML External Entity flaws and Broken Access Control\n\n- Estimate the likelihood of a  vulnerability existing in  applications released by the \"average developer\"\n\n- Estimate the likelihood of themselves introducing these vulnerabilities\n  \n- The $\\Delta$ of average and individual scores gives an indication of potential biased perspectives. A score of 75 for average developers and 50 for myself gives a score of 25, suggesting I expect my work to be better than the average developer.\n\n## Cognitive Reflection Test (CRT)\n\n::::{.columns}\n\n:::{.column width=\"50%\"}\n\n![Photograph: Getty Images](https://i.guim.co.uk/img/media/3e8497247a35171755e4b418ea6084a108c2f7f9/90_429_1569_851/master/1569.jpg?width=620&quality=45&dpr=2&s=none){.width-image fig-align=\"left\"}\n\n- \"A bat and a ball cost £1.10 in total. The bat costs £1.00 more than the ball. How much does the ball cost?\"\n\n:::{.fragment}\n\n- 5p\n:::\n\n:::{.fragment}\n\n- A measure of system 2 processing [@frederickCognitiveReflectionDecision2005], an aspect of dual processing theory [@evansTwoMindsDualprocess2003]\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n:::{.fragment}\n\nDual Processing Theory\n\n- Two systems of cognitive processing\n  - System 1: intuitive and automatic\n  - System 2: reflective and deliberate\n\n:::\n\n:::\n\n::::\n## Gambling Task\n\n- A measure used by @frederickCognitiveReflectionDecision2005 to assess risk aversion.\n\n- Risk aversion can be linked to prospect theory, which suggests decisions maximise gains and minimise losses [@kahnemanProspectTheoryAnalysis1979]. \n\n- People experience negativity from a loss more strongly than positivity from gains. Accordingly, people typically make choices that minimise loss over maximising gain [@levyIntroductionProspectTheory1992]. \n\n- \"Gain £1,000 for sure or a 90% chance of £5,000\" - Gain frame\n\n- \"Lose £100 for sure or a 75% chance to lose £200\" - Loss frame\n\n## Qualitative Questions \n\n:::{.scrolling}\n\n\n::: {.cell-output-display}\n|Number |Question                                                                                                                                                                                                                 |\n|:------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|1      |Describe a time when you successfully developed and released/launched a software project, either in a professional or personal capacity. This could  be a recent example, or  a project you were particularly proud of.  |\n|2      |When considering the process of developing and launching software/web applications, what is at risk of potentially going wrong and how could these risks affect you?)                                                    |\n|3      |If you were to consider software development as a series of 'gambles' (decisions that confer possible risk), what gambles would be considered worthwhile or worth a risk during the process of developing software? Why? |\n|4      |What approaches or considerations, do you, or your team, take when aiming to identify potential risks or security vulnerabilities when developing software? What is the reasoning behind these decisions?                |\n:::\n\n\n:::\n\n## The ROAR of software security \n\n How **R**esponsibility, **O**ptimism **A**nd **R**isk shape developers’ security perceptions \n\n::::{.columns}\n\n:::{.column width=\"50%\"}\n- A thematic analysis of the qualitative responses [@braunUsingThematicAnalysis2006]\n\n- Two psychological theories were found which helped explain the findings:\n  - the  Social Identity Approach [@haslamSocialIdentityApproach2012; @abramsIntroductionSocialIdentity1990].\n  - Heuristics and Biases [@kahnemanJudgmentUncertaintyHeuristics1974].\n  \n:::\n\n:::{.column width=\"50%\"}\n\n![Groupings of themes and subthemes seen](Images/themes_visual.png)\n\n:::\n\n::::\n\n:::{.notes}\nSocial identities are not congruent with typecasts, but are fluid, self-defined group memberships to allow individuals to associate with others who share emotionally significant norms and values\n\nHeuristics are cognitive \"shortcuts\" people rely upon during decision making. Heuristics make use of frameworks and cognitively simple processes to make intuitive, instinctive judgments\n:::\n\n## Responsibility and Social Identity\n\n![Tom Gauld](https://www.simplypsychology.org/wp-content/uploads/ingroup-bias.jpg){.width-image fig-align=\"left\"}\n\n::::{.columns}\n\n:::{.column width=\"33%\"}\n\n**Diffusion** - when *individuals* view themselves as parts of a chain where an assumption of responsibility is made for *others*\n\n:::\n\n:::{.column width=\"33%\"}\n\n**Displacement** - where responsibility is passed upwards through hierarchies, such as towards team leaders or managers\n\n\n:::\n\n:::{.column width=\"33%\"}\n\n**Acceptance** - where people take responsibility for their actions, their work, and the consequences.\n\n:::\n\n::::\n\n:::{.notes}\n\n**Diffusion**\n\n- Pushing responsibility to others deemed as outsiders\n\n- A shared identity can invoke trust, but this can be abused by those who feel less as part of the group\n\n- Tools/software can represent other engineers, increasing people's reliance. Official sources can be seen as an ingorup member\n\n- Accountability can reduce diffusion, particularly towards outgroups\n\n**Displacement**\n\n- Language can indicate an ingroup/outgroup relationship\n\n- Those in positions of management highlight their feelings of responsibility \n\n- People can assume senior employees are there to double check work \n\n- Policies can also be used to displace \n\n- Clients and stakeholders can be assumed to have ultimate responsibility\n\n**Acceptance**\n\n- A key factor is moral/emotional connections \n\n- Or via social values, such as empathy\n\n- And even expressing caution about using third party software or tools\n\n\n:::\n\n## Optimism\n\n- Optimism was commonly associated with risk mitigation, representing a potentially idealistic view on resolving these issues. Unrealistic optimism biases manifest in different ways, from planning fallacies to over-optimism that security is good enough.\n\n- Others refuse the possibility they may be victims\n\n- Developers expressing an optimism bias often spoke about security and risk in absolutes and dismissed uncertainty or insecure code as issues of other developers, but not for themselves.\n\n## Risk\n\n::::{.columns}\n\n:::{.column width=\"33%\"}\n\n![](https://www.griffinlearninginstitute.com/wp-content/uploads/2018/09/Understanding-Risk-Appetite.jpg){.width-image}\n\n**Appetite** - Risk appetites can be defined as passive or active. Active decisions intentionally reduce efforts in specific areas, and passive decisions increase risk through a reduction of attention\n\n:::\n\n:::{.column width=\"33%\"}\n\n![](https://cdn.corporatefinanceinstitute.com/assets/risk3-1024x464.jpeg){.width-image}\n**Mitigation** - Mitigation of risk was mainly mentioned alongside planning and testing\n\n:::\n\n:::{.column width=\"33%\"}\n\n**Direction** - could be directed towards or away from an individual. The direction is linked to the emotional/moral language associated\n\n:::\n\n::::\n\n:::{.notes}\n\n- Passive and Active risk appetites were seen\n\n- Passive appetites are centred ons ecurity, such as delaying its inclusion\n\n- Time constraints and technical debts alter active appetites, with greater risks being considered acceptable\n\n**Direction**\n\n - Risks could be directed away or towards the individual\n \n - Risk to others was typically presented without any personal emotional connection.\n \n - Experiencing failures or having to abandon projects due to self-directed risks could challenge a developer’s perception of their competence\n\n:::\n\n## Discussion \n\n:::{.incremental}\n\n- Responsibility can be linked to an organisation’s security culture, with managers playing a key role in motivating developers to consider the real-world implications and impact of insecure software\n\n- Gaining different perspectives on the development process may reduce biases through increased communication and reflection. For solo workers, increasing communication with clients and stake- holders may provide similar benefits.\n\n- Passive risk appetites and poor risk mitigation strategies are likely linked with intuitive system 1 processing and less reflective thinking.\n\n- Social identities assumed by software developers can have a profound impact on their feelings of responsibility and motivation towards their role in the development process.\n\n:::\n\n## Recognising the known unknowns\n\nThe interaction between reflective thinking and optimism for uncertainty among software developer’s security perceptions\n\n- A quantitative analysis of the cognitive battery and a content analysis of the rich-text\n\n- We found an interaction between cognitive reflection and optimism associated with the presence of uncertainty-related language (reflecting risk sensitivity)\n\n## Reflection and Optimism\n\n- Overly optimistic outlooks combined with higher cognitive reflection drives up expressions of uncertainty, while pessimistic or realistic individuals reduce uncertainty as cognitive reflection increases.\n\n![](Images/model_effects.jpeg)\n\n## Discussion\n\n- The finding that cognitive reflection or optimism alone explain very little variance in security perceptions highlights the entangled nature of cognition in the real-world\n\n- Overly optimistic software engineers view additional security implementation as holding minimal value, as they believe their current level of security to be sufficient. When considering security, therefore, they may require stronger cues or framing to activate system 2 when making security decisions\n\n- One catalyst for system 2 thinking during secure decision making might be peer communication, which allows for the balancing of perspectives and a reduction of biases.\n\n- The use of rewards, either intrinsic or extrinsic, for encouraging secure coding behaviours can be used to increase motivation and subsequently increase task performance.\n\n:::{.notes}\n\nintrinsic rewards are those internal to the individual and are inherently found in the task itself and upon completion, and extrinsic rewards are external to the task, such as pay or recognition\n\nThe exact nature of verifying secure coding practices on freelance platforms is beyond the scope of this paper, but if a system can be devised that is universally trusted and easily implementable, then the use of gamification may work as a reward system.\n\n:::\n\n## Where am I going from here?\n\n- The next stage is to assess these measures of cognition (CRT, OVT, intuitive processing) against secure code comprehension\n\n- Using a paradigm designed by Oliveira et al. (2018) [@oliveiraAPIBlindspotsWhy2018] and tested in Python and Java [@brunBlindspotsPythonJava2022], we will see whether aspects of cognition will associate with error detection.\n\n- Oliveira and colleagues posited that code vulnerabilities occupy a cognitive blindspot [@oliveiraItPsychologyStupid2014] but haven't applied any measures of cognition relating to heuristics/cognitive processing styles\n\n- We would expect greater comprehension and error detection from those who score highly on CRT, lower on optimism measures, greater rational processing styles, lower intuitive processing styles, but no difference for expertise, familiarity, or cybersecurity knowledge\n\n## Thank You\n\nThank you! Any questions?\n\n{{< fa envelope >}} [matthew.ivory@lancaster.ac.uk](mailto:matthew.ivory@lancaster.ac.uk)\n\nSlides are here: [https://www.lancaster.ac.uk/staff/ivorym/ROAR](https://www.lancaster.ac.uk/staff/ivorym/ROAR)\n\nSocial Paper: [https://psyarxiv.com/pexvz/](https://psyarxiv.com/pexvz/) [@ivoryCanYouHear2023]\n\nCognitive Paper: [https://psyarxiv.com/vrf97](https://psyarxiv.com/vrf97) [@ivoryRecognisingKnownUnknowns2023]\n\n\n---",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}