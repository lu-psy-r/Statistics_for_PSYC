{
  "hash": "4d73f82bd9963c2374a3d0e1bc4ef78a",
  "result": {
    "markdown": "---\ntitle: \"2023-24-PSYC122-w19-how-to\"\nauthor: Rob Davies\ndate: \"2024-03-12\"\noutput: word_document\n---\n\n\n\n\n\n# Introduction\n\n\nIn Week 19, we aim to *further develop* skills in working with the linear model.\n\nWe do this to learn how to answer research questions like:\n\n1. What person attributes predict success in understanding?\n2. Can people accurately evaluate whether they correctly understand written \nhealth information?\n\nIn this class, what is new is our focus on critically evaluating -- comparing, reflecting on -- the evidence from more than one relevant study.\n\n- This work simulates the kind of critical evaluation of evidence that psychologists must do in professional research.\n\n## Naming things\n\nI will format dataset names like this: \n\n- `study-one-general-participants.csv`\n\nI will also format variable (data column) names like this: `variable` \n\nI will also format value or other data object (e.g. cell value) names like this: `studyone`\n\nI will format functions and library names like this: e.g. function `ggplot()` or e.g. library `{tidyverse}`.\n\n## The data we will be using\n\nIn this how-to guide, we use data from two 2020 studies of the response of adults from a UK national sample to written health information:\n\n- `study-one-general-participants.csv`\n- `study-two-general-participants.csv`\n\nThe reason we are going to work with two datasets is that we will be comparing the results of analyses of the data to assess whether the results are robust.\n\nHere, our assessment of robustness focuses on whether similar results are found\nin two different studies.\n\nCheck out the PSYC122 Week 19 lecture for a discussion of how an assessment of robustness is important to psychological science.\n\n\n# Answers\n\n\n## Step 1: Set-up\n\n\nTo begin, we set up our environment in R.\n\n\n### Task 1 -- Run code to empty the R environment\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-1_d6f101a523869d61f306b558acfa79c3'}\n\n```{.r .cell-code}\nrm(list=ls())                            \n```\n:::\n\n\n\n### Task 2 -- Run code to load relevant libraries\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-2_d2bf96946e198cc96b4d6607c5c0b947'}\n\n```{.r .cell-code}\nlibrary(\"ggeffects\")\nlibrary(\"patchwork\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'patchwork' was built under R version 4.1.1\n```\n:::\n\n```{.r .cell-code}\nlibrary(\"tidyverse\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.1.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'purrr' was built under R version 4.1.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'stringr' was built under R version 4.1.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n\n## Step 2: Load the data\n\n\n### Task 3 -- Read in the data files we will be using\n\nThe data files are called:\n\n- `study-one-general-participants.csv`\n- `study-two-general-participants.csv`\n\nUse the `read_csv()` function to read the data files into R:\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-3_89a3e5f723739843faed1df4b87e4733'}\n\n```{.r .cell-code}\nstudy.one.gen <- read_csv(\"study-one-general-participants.csv\")  \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 169 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): participant_ID, study, GENDER, EDUCATION, ETHNICITY\ndbl (7): mean.acc, mean.self, AGE, SHIPLEY, HLVA, FACTOR3, QRITOTAL\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nstudy.two.gen <- read_csv(\"study-two-general-participants.csv\")  \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 172 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): participant_ID, study, GENDER, EDUCATION, ETHNICITY\ndbl (7): mean.acc, mean.self, AGE, SHIPLEY, HLVA, FACTOR3, QRITOTAL\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\nWhen you read the data files in, give the data objects you create distinct name \ne.g. `study.one.gen` versus `study.two.gen`.\n\n\n### Task 4 -- Inspect the data file\n\nUse the `summary()` or `head()` functions to take a look at both datasets.\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-4_afe2065acf574aaa071428bdadef374d'}\n\n```{.r .cell-code}\nsummary(study.one.gen)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n participant_ID        mean.acc        mean.self        study          \n Length:169         Min.   :0.3600   Min.   :3.440   Length:169        \n Class :character   1st Qu.:0.7600   1st Qu.:6.080   Class :character  \n Mode  :character   Median :0.8400   Median :7.080   Mode  :character  \n                    Mean   :0.8163   Mean   :6.906                     \n                    3rd Qu.:0.9000   3rd Qu.:7.920                     \n                    Max.   :0.9900   Max.   :9.000                     \n      AGE           SHIPLEY           HLVA           FACTOR3     \n Min.   :18.00   Min.   :23.00   Min.   : 3.000   Min.   :34.00  \n 1st Qu.:24.00   1st Qu.:33.00   1st Qu.: 7.000   1st Qu.:46.00  \n Median :32.00   Median :35.00   Median : 9.000   Median :51.00  \n Mean   :34.87   Mean   :34.96   Mean   : 8.905   Mean   :50.33  \n 3rd Qu.:42.00   3rd Qu.:38.00   3rd Qu.:10.000   3rd Qu.:55.00  \n Max.   :76.00   Max.   :40.00   Max.   :14.000   Max.   :63.00  \n    QRITOTAL        GENDER           EDUCATION          ETHNICITY        \n Min.   : 6.00   Length:169         Length:169         Length:169        \n 1st Qu.:12.00   Class :character   Class :character   Class :character  \n Median :13.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   :13.36                                                           \n 3rd Qu.:15.00                                                           \n Max.   :19.00                                                           \n```\n:::\n\n```{.r .cell-code}\nsummary(study.two.gen)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n participant_ID        mean.acc        mean.self        study          \n Length:172         Min.   :0.4107   Min.   :3.786   Length:172        \n Class :character   1st Qu.:0.6786   1st Qu.:6.411   Class :character  \n Mode  :character   Median :0.7679   Median :7.321   Mode  :character  \n                    Mean   :0.7596   Mean   :7.101                     \n                    3rd Qu.:0.8393   3rd Qu.:7.946                     \n                    Max.   :0.9821   Max.   :9.000                     \n      AGE           SHIPLEY           HLVA           FACTOR3     \n Min.   :18.00   Min.   :23.00   Min.   : 3.000   Min.   :29.00  \n 1st Qu.:25.00   1st Qu.:32.75   1st Qu.: 7.750   1st Qu.:47.00  \n Median :32.50   Median :36.00   Median : 9.000   Median :51.00  \n Mean   :35.37   Mean   :35.13   Mean   : 9.064   Mean   :51.24  \n 3rd Qu.:44.00   3rd Qu.:39.00   3rd Qu.:11.000   3rd Qu.:56.25  \n Max.   :76.00   Max.   :40.00   Max.   :14.000   Max.   :63.00  \n    QRITOTAL        GENDER           EDUCATION          ETHNICITY        \n Min.   : 6.00   Length:172         Length:172         Length:172        \n 1st Qu.:12.00   Class :character   Class :character   Class :character  \n Median :14.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   :13.88                                                           \n 3rd Qu.:16.00                                                           \n Max.   :20.00                                                           \n```\n:::\n:::\n\n\nNotice that `study.two.gen` was designed to be a replication of `study.one.gen`.\n\n- We use the same online survey methods to collect data in both studies.\n- We present different health information texts in the different studies and recorded responses from different groups of adults in the UK.\n\n\n## Step 3: Compare the data from the different studies\n\n\n### Revise: practice to strengthen skills\n\n\n### Task 5 --  Compare the data distributions from the two studies\n\n\n- Q.1. What is the mean of the `mean.acc` and `SHIPLEY` variables in the two studies?\n- A.1. The means are:\n\n- study one -- mean.acc -- mean = 0.8163\n- study one -- mean.self -- mean = 6.906\n- study two -- mean.acc -- mean = 0.7596\n- study two -- mean.self -- mean = 7.101\n\n- Q.2. Draw histograms of both mean.acc and mean.self for both studies.\n- A.2. You can write the code as you have been shown to do e.g. in `2023-24-PSYC122-w17-how-to.Rmd`:\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-5_3814c22c10593b32a8978197907acbec'}\n\n```{.r .cell-code}\nggplot(data = study.one.gen, aes(x = mean.acc)) + \n  geom_histogram(binwidth = .1) +\n  theme_bw() +\n  labs(x = \"Mean accuracy (mean.acc)\", y = \"frequency count\") +\n  xlim(0, 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_bar()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-24-PSYC122-w19-how-to_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = study.one.gen, aes(x = mean.self)) + \n  geom_histogram(binwidth = 1) +\n  theme_bw() +\n  labs(x = \"Mean self-rated accuracy (mean.self)\", y = \"frequency count\") +\n  xlim(0,10)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_bar()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-24-PSYC122-w19-how-to_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = study.two.gen, aes(x = mean.acc)) + \n  geom_histogram(binwidth = .1) +\n  theme_bw() +\n  labs(x = \"Mean accuracy (mean.acc)\", y = \"frequency count\") +\n  xlim(0, 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_bar()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-24-PSYC122-w19-how-to_files/figure-html/unnamed-chunk-5-3.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = study.two.gen, aes(x = mean.self)) + \n  geom_histogram(binwidth = 1) +\n  theme_bw() +\n  labs(x = \"Mean self-rated accuracy (mean.self)\", y = \"frequency count\") +\n  xlim(0,10)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_bar()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-24-PSYC122-w19-how-to_files/figure-html/unnamed-chunk-5-4.png){width=672}\n:::\n:::\n\n\n\n### Introduce: make some new moves\n\n\n### Task 6 --  Create grids of plots to make the comparison easier to do\n\n### hint: Task 6 -- What we are going to do is to create two histograms and then present them side by side to allow easy comparison of variable distributions\n\nWe need to make two changes to the coding approach you have been using until now.\n\nBefore we explain anything, let's look at an example: run these line of code and check the result.\n\n- Make sure you identify what is different about the plotting code, shown following, compared to what you have done before: there is a *surprise* in what is going to happen.\n\nFirst, create plot objects, give them names, but do not show them:\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-6_bbb6cd7c5f454b41e072d3ac1d95625e'}\n\n```{.r .cell-code}\nplot.one <- ggplot(data = study.one.gen, aes(x = mean.acc)) + \n  geom_histogram(binwidth = .1) +\n  theme_bw() +\n  labs(x = \"Mean accuracy (mean.acc)\", y = \"frequency count\", title = \"Study One\") +\n  xlim(0, 1)\n\nplot.two <- ggplot(data = study.two.gen, aes(x = mean.acc)) + \n  geom_histogram(binwidth = .1) +\n  theme_bw() +\n  labs(x = \"Mean accuracy (mean.acc)\", y = \"frequency count\", title = \"Study Two\") +\n  xlim(0, 1)\n```\n:::\n\n\nSecond, show the plots, side-by-side:\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-7_97083c062c281f7d92366d02adeac1d6'}\n\n```{.r .cell-code}\nplot.one + plot.two\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_bar()`).\nRemoved 2 rows containing missing values (`geom_bar()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-24-PSYC122-w19-how-to_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nThis is what you are doing: check out the process, step-by-step.\n(And notice that you repeat the process for each of two (or more) plots.)\n\n1. `ggplot(...)` tell R you want to make a plot using the `ggplot()` function;\n2. `plot.one <-` tell R you want to give the plot a name; the name appears in the environment;\n3. `ggplot(data = study.one.gen ...)` tell R you want to make a plot with the `study.two` data;\n4. `ggplot(..., aes(x = mean.acc))` tell R that you want to make a plot with the variable `mean.acc`;\n\n- here, specify the aesthetic mapping, `x = mean.acc`\n\n5. `geom_histogram()` tell R you want to plot values of `mean.acc` as a histogram;\n6. `binwidth = .1` adjust the binwidth to show enough detail but not too much in the distribution;\n7. `theme_bw()` tell R what theme you want, adjusting the plot appearance;\n8. `labs(x = \"Mean accuracy (mean.acc)\", y = \"frequency count\", title = \"Study One\")` fix the x-axis and y-axis labels;\n\n- here, add a title for the plot, so you can tell the two plots apart;\n\n9. `xlim(0, 1)` adjust the x-axis limits to show the full range of possible score values on this variable.\n\nDo this process twice, once for each dataset, creating two plots so that you can compare the distribution of `mean.acc` scores between the studies.\n\nFinally, having created the two plots, produce them for viewing:\n  \n10. `plot.one + plot.two` having constructed -- and named -- both plots, you enter their names, separated by a +, to show them in a grid of two plots.\n\nNotice: until you get to step 10, **nothing will appear**. \n\nThis will be **surprising** but it is perfectly normal when we increase the *level of complexity* of the plots we build.\n\n- You first build the plots. \n- You are creating plot objects and you give these objects names.\n- The objects will appear in the `Environment` with the names you give them.\n- You then *produce* the plots for viewing, by using their names.\n\nUntil you complete the last step, you will not see any changes until you use the object names to produce them for viewing.\n\nThis is how you construct complex arrays of plots. \n\n\n### Task 7 -- Try this out for yourself, focusing now on the distribution of `mean.self` scores in the two studies\n\nFirst, create plot objects but do not show them.\n\n- Give each plot a name. You will use the names next.\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-8_736812f3454fa3e536aacf02d4e6ac40'}\n\n```{.r .cell-code}\nplot.one <- ggplot(data = study.one.gen, aes(x = mean.self)) + \n  geom_histogram(binwidth = 2) +\n  theme_bw() +\n  labs(x = \"Self-rated accuracy (mean.self)\", y = \"frequency count\", title = \"Study One\") +\n  xlim(0, 10)\n\nplot.two <- ggplot(data = study.two.gen, aes(x = mean.self)) + \n  geom_histogram(binwidth = 2) +\n  theme_bw() +\n  labs(x = \"Self-rated accuracy (mean.self)\", y = \"frequency count\", title = \"Study Two\") +\n  xlim(0, 10)\n```\n:::\n\n\nSecond produce the plots for viewing, side-by-side, by *naming* them.\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-9_a51aa521ee86558a34c147be0f4db635'}\n\n```{.r .cell-code}\nplot.one + plot.two\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_bar()`).\nRemoved 2 rows containing missing values (`geom_bar()`).\n```\n:::\n\n::: {.cell-output-display}\n![](2023-24-PSYC122-w19-how-to_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n- Q.3. Now use the plots to do some data analysis work: how do the `mean.self` distributions compare, when you compare the `mean.self` of `study.one.gen` versus ``mean.self` of `study.two.gen`?\n- A.3. When you compare the plots side-by-side you can see that the `mean.self` distributions are similar in the two studies: most people have high `mean.self` scores. This means that they rated the accuracy of their understanding at a high level, on average.\n\n- Q.4. Is the visual impression you get from comparing the distributions consistent with the statistics you see in the summary?\n- A.4. Yes: If you go back to the summary of `mean.self`, comparing the two studies datasets, then you can see that the median and mean are similar (around 7) in both `study.one.gen` and `study.two.gen` datasets.\n\n\n## Step 4: Now use scatterplots and correlation to examine associations between variables\n\n\n### Revise: practice to strengthen skills\n\n\n### Task 8 -- Draw scatterplots to compare the potential association between `mean.acc` and `mean.self` in both `study.one.gen` and `study.two.gen` datasets\n\n### hint: Task 8 -- The plotting steps are explained in some detail in `2023-24-PSYC122-w17-how-to.Rmd`\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-10_28d1b5f8de595e49bf686244596e2003'}\n\n```{.r .cell-code}\nggplot(data = study.one.gen, aes(x = mean.self, y = mean.acc)) +\n  geom_point(alpha = 0.75, size = 3, colour = \"darkgrey\") +\n  geom_smooth(method = \"lm\", size = 1.5, colour = \"green\") +\n  theme_bw() +\n  labs(x = \"mean self-rated accuracy\", y = \"mean accuracy\") +\n  xlim(0, 10) + ylim(0, 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](2023-24-PSYC122-w19-how-to_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = study.two.gen, aes(x = mean.self, y = mean.acc)) +\n  geom_point(alpha = 0.75, size = 3, colour = \"darkgrey\") +\n  geom_smooth(method = \"lm\", size = 1.5, colour = \"green\") +\n  theme_bw() +\n  labs(x = \"mean self-rated accuracy\", y = \"mean accuracy\") +\n  xlim(0, 10) + ylim(0, 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](2023-24-PSYC122-w19-how-to_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n:::\n\n\n### Task 9 --  Create a grid of plots to make the comparison easier to do\n\n### hint: Task 9 -- We follow the same steps as we used in tasks 6 and 7 to create the plots\n\nWe again:\n\n1. First construct the plot objects and give them names;\n2. Then create and show a grid of named plots.\n\nThough this time we are producing a grid of **scatterplots**.\n\nFirst, create plot objects -- give them names but do not show them:\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-11_d3794b3bcd20ffc4e403d2f1c0a404b2'}\n\n```{.r .cell-code}\nplot.one <- ggplot(data = study.one.gen, aes(x = mean.self, y = mean.acc)) +\n  geom_point(alpha = 0.75, size = 3, colour = \"darkgrey\") +\n  geom_smooth(method = \"lm\", size = 1.5, colour = \"green\") +\n  theme_bw() +\n  labs(x = \"mean self-rated accuracy\", y = \"mean accuracy\", title = \"Study One\") +\n  xlim(0, 10) + ylim(0, 1)\n\nplot.two <- ggplot(data = study.two.gen, aes(x = mean.self, y = mean.acc)) +\n  geom_point(alpha = 0.75, size = 3, colour = \"darkgrey\") +\n  geom_smooth(method = \"lm\", size = 1.5, colour = \"green\") +\n  theme_bw() +\n  labs(x = \"mean self-rated accuracy\", y = \"mean accuracy\", title = \"Study Two\") +\n  xlim(0, 10) + ylim(0, 1)\n```\n:::\n\n\n- Notice that in the plotting code we ask R to give each plot a title using `labs()`.\n\nSecond name the plots, to show them side-by-side in the plot window:\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-12_9867b188a95b9ff870f1d760dddb3cde'}\n\n```{.r .cell-code}\nplot.one + plot.two\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](2023-24-PSYC122-w19-how-to_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nNow use the plots to make comparison judgments.\n\n- Q.5. How does the association, shown in the plots, between `mean.self` and `mean.acc` compare when you look at the `study.one.gen` versus the `study.two.gen` plot?\n- hint: Q.5. When comparing evidence about associations in different studies, we are mostly going to focus on the slope -- the angle -- of the prediction lines, and the ways in which points do or do not cluster about the prediction lines.\n- A.5. If you examine the `study.one.gen` versus the `study.two.gen` plots then you can see that in both plots higher `mean.self` scores appear to be associated with higher `mean.acc` scores. But the trend maybe is a bit stronger -- the line is steeper -- in `study.two.gen` compared to `study.two.gen`.\n\nWe are now in a position to answer one of our research questions:\n\n2. Can people accurately evaluate whether they correctly understand written health information?\n\nIf people *can* accurately evaluate whether they correctly understand written health information then `mean.self` (a score representing their evaluation) should be associated with `mean.acc` (a score representing their accuracy of understanding) for each person.\n\n\n### Revise: practice to strengthen skills\n\n\n### Task 10 --  Can you estimate the association between `mean.acc` and `mean.self` in both datasets?\n\n### hint: Task 10 -- Use `cor.test()` as you have been shown how to do e.g. in `2023-24-PSYC122-w16-how-to.Rmd`\n\nDo the correlation for both datasets.\n\nFirst, look at the correlation between `mean.acc` and `mean.self` in `study.one.gen`:\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-13_05d16f2fa11001cee66e294dbbee2ab9'}\n\n```{.r .cell-code}\ncor.test(study.one.gen$mean.acc, study.one.gen$mean.self, method = \"pearson\",  alternative = \"two.sided\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  study.one.gen$mean.acc and study.one.gen$mean.self\nt = 7.1936, df = 167, p-value = 2.026e-11\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.3619961 0.5937425\nsample estimates:\n      cor \n0.4863771 \n```\n:::\n:::\n\n\n- Q.6. What is r, the correlation coefficient?\n- A.6. r = 0.4863771\n\n- Q.7. Is the correlation significant?\n- A.7. r is significant\n\n- Q.8. What are the values for t and p for the significance test for the correlation?\n- A.8. t = 7.1936, p-value = 2.026e-11\n\nSecond, look at the correlation between `mean.acc` and `mean.self` in `study.two.gen`:\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-14_c27d3443de17b778fbc02e05265ffdc7'}\n\n```{.r .cell-code}\ncor.test(study.two.gen$mean.acc, study.two.gen$mean.self, method = \"pearson\",  alternative = \"two.sided\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  study.two.gen$mean.acc and study.two.gen$mean.self\nt = 8.4991, df = 170, p-value = 9.356e-15\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.4317217 0.6431596\nsample estimates:\n      cor \n0.5460792 \n```\n:::\n:::\n\n\n- Q.9. What is r, the correlation coefficient?\n- A.9. r = 0.5460792\n\n- Q.10. Is the correlation significant?\n- A.10. r is significant\n\n- Q.11. What are the values for t and p for the significance test for the correlation?\n- A.11. t = 8.4991, p = 9.356e-15\n\n\nNow we can answer the research question:\n\n2. Can people accurately evaluate whether they correctly understand written health information?\n\n\n- Q.12. What do the correlation estimates tell you is the answer to the research question?\n- A.12. \n\n> The correlations are positive and significant, indicating that higher `mean.self` (evaluations) are associated with higher `mean.acc` (understanding), suggesting that people *can* judge their accuracy of understanding.\n\n- Q.13.  Can you compare the estimates, given the two datasets, to evaluate if the result in `study.one.gen` is *replicated* in `study.two.gen`?\n- hint: Q.13. We can judge if the result in a study is replicated in another study by examining if -- here -- the correlation coefficient is significant in both studies *and* if the coefficient has the same size and sign in both studies.\n- A.13. If you compare the correlation estimates from both `study.one.gen` and `study.two.gen` you can see:\n\n- first, the correlation is significant in both studies;\n- second, the correlation is positive in both studies,\n- third, the correlation is similar in magnitude, about $r = .5$ in both studies.\n\nThis suggests that the association we see in `study.one.gen` is replicated in `study.two.gen`.\n\n\n## Step 5: Use a linear model to to answer the research questions -- multiple predictors\n\n\n### Revise: practice to strengthen skills\n\n\n### Task 11 -- Examine the relation between outcome mean accuracy (`mean.acc`) and multiple predictors \n\nWe specify linear models including as predictors the variables:\n\n- health literacy (`HLVA`); \n- vocabulary (`SHIPLEY`); \n- reading strategy (`FACTOR3`).\n\n### hint: Task 11 -- Use `lm()`, as you have done before, see e.g. `2023-24-PSYC122-w18-how-to.R`\n\n\n### Task 11 -- Examine the predictors of mean accuracy (`mean.acc`), first, for the `study.one.gen` data\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-15_a1a41622317e734fdc9458b31170e329'}\n\n```{.r .cell-code}\nmodel <- lm(mean.acc ~ HLVA + SHIPLEY + FACTOR3, data = study.one.gen)\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = mean.acc ~ HLVA + SHIPLEY + FACTOR3, data = study.one.gen)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.40322 -0.05349  0.01152  0.07128  0.18434 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 0.302030   0.091257   3.310  0.00115 ** \nHLVA        0.017732   0.003923   4.521 1.17e-05 ***\nSHIPLEY     0.005363   0.002336   2.296  0.02291 *  \nFACTOR3     0.003355   0.001264   2.654  0.00872 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1033 on 165 degrees of freedom\nMultiple R-squared:  0.2474,\tAdjusted R-squared:  0.2337 \nF-statistic: 18.08 on 3 and 165 DF,  p-value: 3.423e-10\n```\n:::\n:::\n\n\nUsing the model estimates, we can answer the research question:\n\n1. What person attributes predict success in understanding?\n\nInspect the model summary, then answer the following questions:  \n\n- Q.14. What is the estimate for the coefficient of the effect of the predictor `SHIPLEY` in *this* model?\n- A.14. 0.005363 \n\n- Q.15. Is the effect significant?\n- A.15. It is significant, p < .05\n\n- Q.16. What are the values for t and p for the significance test for the coefficient?\n- A.16. t = 2.296, p = 0.02291\n\n- Q.17. Now consider the estimates for all the variables, what do you conclude is the answer to the research question -- given the `study.one.gen` data:\n\n1. What person attributes predict success in understanding?\n\n- hint: Q.17. Can you report the model and the model fit statistics using the language you have been shown in the week 18 lecture?\n\n- A.17. \n\n> We fitted a linear model with mean comprehension accuracy as the outcome and health literacy (`HLVA`),  reading strategy (`FACTOR3`), and vocabulary (`SHIPLEY`) as predictors. The model is significant overall, with F(3, 165) = 18.08, p < .001, and explains 23% of variance (adjusted R2 = 0.23). Mean accuracy was predicted to be higher given higher scores in health literacy (`HLVA` estimate = .018, t = 4.52, p < .001), vocabulary knowledge (`SHIPLEY` estimate = .005, t = 2.96, p < .001), and reading strategy (`FACTOR3` estimate = .003, t = 2.65, p = .009).\n\n\n### Task 12 -- Examine the predictors of mean accuracy (`mean.acc`), now, for the `study.two.gen` data\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-16_5fe312545ba6b1feaa97c0c6f5463694'}\n\n```{.r .cell-code}\nmodel <- lm(mean.acc ~ HLVA + SHIPLEY + FACTOR3, data = study.two.gen)\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = mean.acc ~ HLVA + SHIPLEY + FACTOR3, data = study.two.gen)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.242746 -0.074188  0.003173  0.075361  0.211357 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 0.146896   0.076325   1.925  0.05597 .  \nHLVA        0.017598   0.003589   4.904  2.2e-06 ***\nSHIPLEY     0.008397   0.001853   4.533  1.1e-05 ***\nFACTOR3     0.003087   0.001154   2.675  0.00822 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.097 on 168 degrees of freedom\nMultiple R-squared:  0.3636,\tAdjusted R-squared:  0.3522 \nF-statistic: 31.99 on 3 and 168 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\nUsing the model estimates, we can answer the research question:\n\n1. What person attributes predict success in understanding?\n\nInspect the model summary, then answer the following questions:  \n\n- Q.18. What is the estimate for the coefficient of the effect of the predictor, `SHIPLEY`, in *this* model?\n- A.18. 0.008397 \n\n- Q.19. Is the effect significant?\n- A.19. It is significant, p < .05\n\n- Q.20. What are the values for t and p for the significance test for the coefficient?\n- A.20. t = 4.533, p = 1.1e-05\n\n- Q.21. Now consider the estimates for all the variables, what do you conclude is the answer to the research question -- given the `study.two.gen` data:\n\n1. What person attributes predict success in understanding?\n\n- hint: Q.21. Can you report the model and the model fit statistics using the language you have been shown in the week 18 lecture?\n\n- A.21. \n\n> We fitted a linear model with mean comprehension accuracy as the outcome and health literacy (`HLVA`),  reading strategy (`FACTOR3`), and vocabulary (`SHIPLEY`) as predictors. The model is significant overall, with F(3, 168) = 31.99, p < .001, and explains 35% of variance (adjusted R2 = 0.35). Mean accuracy was predicted to be higher given higher scores in health literacy (HLVA estimate = .018, t = 4.90, p < .001), vocabulary knowledge (SHIPLEY estimate = .008, t = 4.53, p < .001), and reading strategy (FACTOR3 estimate = .003, t = 2.68, p = .008).\n\n- Q.22. Are the findings from `study.one.gen` replicated in `study.two.gen`?\n- hint: Q.22. We can judge if the results in an earlier study are replicated in another study by examining if -- here -- the linear model estimates are significant in both studies *and* if the coefficient estimates have the same size and sign in both studies.\n- A.22. If you compare the linear model coefficient estimates from both `study.one.gen` and `study.two.gen` you can see:\n\n- first, the `HLVA`, `SHIPLEY` and `FACTOR3` estimates are significant in both `study.one.gen` and `study.two.gen`;\n- second, the estimates have the same sign -- positive -- in both studies.\n\nThis suggests that the results we see in `study.one.gen` *are* replicated in `study.two.gen`.\n\n- Q.23. Are there any important differences between the results of the two studies?\n- hint: Q.23. You can look at the estimates but you can also use the model prediction plotting code you used before, see example code in `2022-23-PSYC122-w18-how-to.R`.\n- hint: Q.23. -- Let's focus on comparing the `study.one.gen` and `study.two.gen` estimates for the effect of vocabulary knowledge in both models: we can plot model predictions for comparison:\n\nFirst: fit the models -- using different names for the different models:\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-17_2cb0e64995107c15fa54c5c94bfc6647'}\n\n```{.r .cell-code}\nmodel.one <- lm(mean.acc ~ HLVA + SHIPLEY + FACTOR3, data = study.one.gen)\nsummary(model.one)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = mean.acc ~ HLVA + SHIPLEY + FACTOR3, data = study.one.gen)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.40322 -0.05349  0.01152  0.07128  0.18434 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 0.302030   0.091257   3.310  0.00115 ** \nHLVA        0.017732   0.003923   4.521 1.17e-05 ***\nSHIPLEY     0.005363   0.002336   2.296  0.02291 *  \nFACTOR3     0.003355   0.001264   2.654  0.00872 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1033 on 165 degrees of freedom\nMultiple R-squared:  0.2474,\tAdjusted R-squared:  0.2337 \nF-statistic: 18.08 on 3 and 165 DF,  p-value: 3.423e-10\n```\n:::\n\n```{.r .cell-code}\nmodel.two <- lm(mean.acc ~ HLVA + SHIPLEY + FACTOR3, data = study.two.gen)\nsummary(model.two)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = mean.acc ~ HLVA + SHIPLEY + FACTOR3, data = study.two.gen)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.242746 -0.074188  0.003173  0.075361  0.211357 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 0.146896   0.076325   1.925  0.05597 .  \nHLVA        0.017598   0.003589   4.904  2.2e-06 ***\nSHIPLEY     0.008397   0.001853   4.533  1.1e-05 ***\nFACTOR3     0.003087   0.001154   2.675  0.00822 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.097 on 168 degrees of freedom\nMultiple R-squared:  0.3636,\tAdjusted R-squared:  0.3522 \nF-statistic: 31.99 on 3 and 168 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\nSecond, create prediction plots for the SHIPLEY effect for each model:\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-18_0e9f4f45f0825f530094b054ebd84425'}\n\n```{.r .cell-code}\ndat.one <- ggpredict(model.one, \"SHIPLEY\")\nplot.one <- plot(dat.one) + labs(title = \"Study One\")\ndat.two <- ggpredict(model.two, \"SHIPLEY\")\nplot.two <- plot(dat.two) + labs(title = \"Study Two\")\n```\n:::\n\n\n# -- Third, show the plots side-by-side\n\n\n::: {.cell hash='2023-24-PSYC122-w19-how-to_cache/html/unnamed-chunk-19_43d5fb39ccce64f6d9e45546ad01736a'}\n\n```{.r .cell-code}\nplot.one + plot.two\n```\n\n::: {.cell-output-display}\n![](2023-24-PSYC122-w19-how-to_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n- A.23. If we compare the estimates for the coefficient of the `SHIPLEY` effect in the `study.one.gen` and `study.two.gen` models we can see that:\n\n1. the `SHIPLEY` effect is significant in both `study.one.gen` and `study.two.gen`;  \n2. the effect is positive in both studies;\n3. the coefficient estimate is a bit bigger in `study.two.gen` than in `study.two.gen`;\n4. the prediction plots suggest the prediction line slope is steeper in `study.two.gen`.\n\nThis suggests that the effect of vocabulary is stronger in Study Two.\n\n- Why that is should be the target of further investigation.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}