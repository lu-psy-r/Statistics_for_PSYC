{
  "hash": "0d59e942272045fc475d97e890a6daf0",
  "result": {
    "markdown": "---\ntitle: \"122_wk13_labActivity2\"\nauthor: \"Margriet Groen\"\ndate: \"2024-01-24\"\noutput: html_document\n---\n\n\n\n\n## Lab activity 2 - Reminders through association\n\n**Aim**: What we want to do is to run a chi-square analysis to determine whether those in the RTA condition were\nmore likely to remember to return the paper-clips than those in the control condition.\n\n# Step 1. Loading the relevant libraries\n\n::: {.cell hash='122_wk14_labAct2_cache/html/libraries_f635113049efdd789fe3ef6f7cd06ad9'}\n\n```{.r .cell-code}\nlibrary(lsr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'lsr' was built under R version 4.1.1\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.1.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'purrr' was built under R version 4.1.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'stringr' was built under R version 4.1.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n# Step 2. Read in the data and have a look at it\n\n::: {.cell hash='122_wk14_labAct2_cache/html/read in data_519bec78f01d061fe83d368b4f9cfa3d'}\n\n```{.r .cell-code}\nintent_data <- read_csv(\"RTA_study1.csv\")                                 # Read in the data file\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 87 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (4): condition, intend, actualdonate, id\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nhead(intent_data)                                                         # Look at the table\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  condition intend actualdonate    id\n      <dbl>  <dbl>        <dbl> <dbl>\n1         1      1            1     1\n2         1      1            1     2\n3         1      1            1     3\n4         1      1            1     4\n5         1      1            1     5\n6         1      1            1     6\n```\n:::\n:::\n\n>*Question 2a:* What do the numbers in the first row across the four columns refer to?\n\n**condition = 1, intend = 1, actualdonate = 1 and id = 1 shows us that participant 1 was in the 'reminder-through-assocation' condition, reported that they intended to donate and also actually donated.**\n\n# Step 3. Getting the data ready.\n\n::: {.cell hash='122_wk14_labAct2_cache/html/recode_158370ca2ea5b86c78ae3961507239c2'}\n\n```{.r .cell-code}\nintent_recode <- intent_data %>%\n  filter(intend == 1) %>%\n  mutate(condition = recode(condition, \"1\" = \"rta\", \"2\" = \"control\"),\n         actualdonate = recode(actualdonate, \"1\" = \"donated\", \"0\" = \"no_donation\"))\n\nhead(intent_recode)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  condition intend actualdonate    id\n  <chr>      <dbl> <chr>        <dbl>\n1 rta            1 donated          1\n2 rta            1 donated          2\n3 rta            1 donated          3\n4 rta            1 donated          4\n5 rta            1 donated          5\n6 rta            1 donated          6\n```\n:::\n:::\n\n\n>*Question 3a:* How many participants were removed because they didn't intend to return the paper-clips?\n**10 participants. The table 'intent_data' contains 87 observations, after we have applied the `filter()` function to include only those participants who did intend to return the paper-clips, the intent_recode table contains 77 observations.**\n\n# Step 4: Calculating descriptive statistics\n\n\n::: {.cell hash='122_wk14_labAct2_cache/html/descriptives_2932b205bf029d7a6a9ac3658fe1ca68'}\n\n```{.r .cell-code}\nintent_counts <- intent_recode %>%\ngroup_by(condition, actualdonate) %>%\n  count()\n\nintent_counts\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n# Groups:   condition, actualdonate [4]\n  condition actualdonate     n\n  <chr>     <chr>        <int>\n1 control   donated         16\n2 control   no_donation     22\n3 rta       donated         29\n4 rta       no_donation     10\n```\n:::\n:::\n\n\n>*Question 4a:* How many participants in the control condition didn’t donate? **22**\n\n>*Question 4b:* How many participants in the control condition donated? **16**\n\n>*Question 4c:* How many participants in the rta condition didn’t donate? **10**\n\n>*Question 4d:*  How many participants in the rta condition donated? **29**\n\nPercentages\n\n::: {.cell hash='122_wk14_labAct2_cache/html/percentages_89cb094f68c0a6ede14bbbd1cc0bca11'}\n\n```{.r .cell-code}\nintent_percent <- intent_recode %>%\n  group_by(condition, actualdonate) %>%\n  count() %>%\n  ungroup() %>% # ungroups the data\n  group_by(condition) %>% # then groups it again but just by condition\n  mutate(percent_condition = n/sum(n) * 100)\n\nintent_percent\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n# Groups:   condition [2]\n  condition actualdonate     n percent_condition\n  <chr>     <chr>        <int>             <dbl>\n1 control   donated         16              42.1\n2 control   no_donation     22              57.9\n3 rta       donated         29              74.4\n4 rta       no_donation     10              25.6\n```\n:::\n:::\n\n\n# Step 5: Visualise the data\n\n\n::: {.cell hash='122_wk14_labAct2_cache/html/unnamed-chunk-1_1b6965e753e26e8bd95478ff95af2358'}\n\n```{.r .cell-code}\nggplot(data = intent_recode, aes(x = condition, fill = actualdonate)) +\n  geom_bar(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](122_wk14_labAct2_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n>*Question 5a:* What does `position = \"dodge\"` do? Remove it and rerun the code to find out.\n**\"dodge\" places the bars next to each other, rather than on top of each other.**\n\n\n::: {.cell hash='122_wk14_labAct2_cache/html/unnamed-chunk-2_cdb390231d39cc150372d5e4de584974'}\n\n```{.r .cell-code}\nggplot(data = intent_recode, aes(x = condition, fill = actualdonate)) + # sets up the base of the graph: the data to use and the aesthetics (what will go on the x\n# and y axis, how the plot will be grouped\n  geom_bar(position = \"dodge\") + # places the bars next to each other, rather than on top of each other.\n  scale_x_discrete(name = \"Condition\", labels = c(\"Control\", \"RTA\")) + # relabels categories on x axis\n  scale_y_continuous(name = \"Count\") + # relabels y axis\n  scale_fill_manual(name = \"Behaviour\", labels = c(\"Donated\", \"Did not donate\"), values = c(\"blue\", \"grey\"))+ # labels colour legend labels and uses colours blue and grey\n  theme_classic() #changes the background\n```\n\n::: {.cell-output-display}\n![](122_wk14_labAct2_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n# Step 6: Run Chi-square test ----------------------------------\n\n\n::: {.cell hash='122_wk14_labAct2_cache/html/chi-square_2eea11e9e827987bf404132f55a6b4bc'}\n\n```{.r .cell-code}\nresults <- chisq.test(x = intent_recode$condition,        # the first grouping variable\n                      y = intent_recode$actualdonate,     # the second grouping variable\n                      correct = FALSE)                    # whether we want to apply the continuity correction (use if any of the expected cell frequencies < 10 in 2 x 2 table)\nresults\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  intent_recode$condition and intent_recode$actualdonate\nX-squared = 8.244, df = 1, p-value = 0.004089\n```\n:::\n:::\n\n\n>*Question 6a:* What do you conclude from the output? **There is a significant association between the grouping variables.**\n\n# Step 7: Checking assumptions\n\nThe assumptions for chi-square are as follows:\n\n1) The data in the cells should be frequencies, or counts of cases rather than percentages. **As long as you have used the correct data frame this assumption is satisfied.**\n2) The levels (or categories) of the variables are mutually exclusive. That is, a particular participant fits into one and only one group of each of the variables. **This is true for this experiment.**\n3) Each participant may contribute data to one and only one cell. If, for example, the same participants are tested\nover time such that the comparisons are of the same subjects at Time 1, Time 2, Time 3, etc., then Chi-square may\nnot be used. **This is true for this experiment.**\n4) The study groups must be independent. This means that a different test must be used if the two groups are related. For example, a different test must be used if the researcher’s data consists of paired samples, such as in studies in which a parent is paired with his or her child. **The groups in this experiment are independent.**\n5) There are 2 variables, and both are measured as categories, usually at the nominal level. While Chi-square has no rule about limiting the number of cells (by limiting the number of categories for each variable), a very large number of cells (over 20) can make it difficult to meet assumption #6 below, and to interpret the meaning of the results. **This is true for this experiment.**\n6) The expected cell frequencies should be greater than 5.\n\nAssumptions 1) to 5) should be evaluated by reviewing the design of the study. The only assumption that we need to check with R is whether all expected frequencies are greater than 5.\n\n\n::: {.cell hash='122_wk14_labAct2_cache/html/assumptions_ca6e5876968280190b1fd3773273bffb'}\n\n```{.r .cell-code}\nresults$expected\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       intent_recode$actualdonate\nintent_recode$condition  donated no_donation\n                control 22.20779    15.79221\n                rta     22.79221    16.20779\n```\n:::\n:::\n\n\n>*Question 7a:* What do you conclude from the output? **The expected frequencies in all cells are greater than 5.** \n\n# Step 8: Effect size\n\nCramer's V\n\n::: {.cell hash='122_wk14_labAct2_cache/html/unnamed-chunk-3_f70e5194738581c249d49fa44b970755'}\n\n```{.r .cell-code}\neff_size <- cramersV(x = intent_recode$condition,     # the first grouping variable\n                     y = intent_recode$actualdonate,  # the second grouping variable\n                     correct = FALSE)                  # whether we want to apply the continuity correction (use if any of the expected cell frequencies < 10 in 2 x 2 table)\neff_size\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.327207\n```\n:::\n:::\n\n\nPercentage variance accounted for:\n\n::: {.cell hash='122_wk14_labAct2_cache/html/unnamed-chunk-4_d4e1d957c7492e90f0e668eda6f25ebd'}\n\n```{.r .cell-code}\npercentageAccountedFor <- eff_size * eff_size * 100\npercentageAccountedFor\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10.70644\n```\n:::\n:::\n\n>*Question 8a:* How large is the effect and how much variance is accounted for? **The effect size (Cramer's V) = 0.33 and the percentage variance accounted for = 11%.**\n\n# Step 9: Standardised residuals\n\n\n::: {.cell hash='122_wk14_labAct2_cache/html/unnamed-chunk-5_ffe85395400d1fe22fabe0b6674770d0'}\n\n```{.r .cell-code}\nresults$residuals   # check the standardised residuals\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       intent_recode$actualdonate\nintent_recode$condition   donated no_donation\n                control -1.317299    1.562125\n                rta      1.300301   -1.541968\n```\n:::\n:::\n\n\n>*Question 9a:* What do you conclude from the output? **The standardised residuals in the 4 cells are all of a roughly similar size (and below 1.96), which suggests that the statistically significant Chi-square tests is not driven by one or two cells, but reflects the pattern across all cells.**\n\n# Step 10: Write up\n\nThose in the reminder-through-association condition performed the intended behaviour at a significantly higher rate (74%, 29 out of 39) than did those in the control condition (42%, 16 out of 38)), *χ2*(1, N = 77) = 8.24, *p* = 0.004, *V* = 0.33. The analysis showed that 11% of variance in intended behaviour could be accounted for by condition (reminder-through-association vs. control).",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}